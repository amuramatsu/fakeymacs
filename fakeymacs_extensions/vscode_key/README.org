#+STARTUP: showall indent

* Fakeymacs extension

** ■ VSCode 用のキーの設定を行う

VSCode 用のキーの設定を行う拡張機能です。

VSCode 用のキーの設定については、README.org の次の項の内容も参考としてください。

- https://github.com/smzht/fakeymacs#vscode-%E3%81%AE%E5%BC%B7%E5%8C%96%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88

*** コンフィグレーションパラメータ

|-------------------------------------+------------------------------------------------------------------------------------------------------------------|
| Configuration parameter             | Description                                                                                                      |
|-------------------------------------+------------------------------------------------------------------------------------------------------------------|
| vscode_target                       | VSCode 用のキーバインドを利用するアプリケーションソフトを指定する                                                |
| use_ctrl_atmark_for_mark            | 日本語キーボードを利用する際、VSCode で  C-@ をマーク用のキーとして使うかどうかを指定する                        |
| use_direct_input_in_vscode_terminal | VSCode の Terminal内 で ４つのキー（Ctrl+k、Ctrl+r、Ctrl+s、Ctrl+y）のダイレクト入力機能を使うかどうかを指定する |
|-------------------------------------+------------------------------------------------------------------------------------------------------------------|

※ vscode_target 変数の初期値には、ブラウザのアプリケーションソフトも複数指定しています。
これは、ブラウザで github1s.com にアクセスしたときに VSCode 用のキーバインドを利用できる
ようにするためです。github1s.com については、次の記事を参考としてください。

- https://forest.watch.impress.co.jp/docs/serial/yajiuma/1306113.html

※ use_ctrl_atmark_for_mark 変数は、VSCode で C-@ を Toggle Integrated Terminal 用のキーとして
使えるようにするために設けた設定です。
初期値は False としており、C-@ を Toggle Integrated Terminal 用のキーとして使えるようにしています。
True に設定した場合でも C-<半角／全角> が使えます。

※ use_direct_input_in_vscode_terminal 変数は初期値を False（使わない）としており、
仕様を理解した方のみ使う機能としています。use_direct_input_in_vscode_terminal 変数を True に
した際の仕様については、上記にリンクしている README.org を参照してください。

*** キーバインド

**** ● 「バッファ / ウィンドウ操作」のキー設定

|-----------+------------------+-------------|
| Keybind   | Function         | Description |
|-----------+------------------+-------------|
| Ctl-x k   | kill_buffer      |             |
| Ctl-x b   | switch_to_buffer |             |
| Ctl-x C-b | list_buffers     |             |
|-----------+------------------+-------------|

****  「エディタ操作」のキー設定

|----------------+------------------------------+-----------------------------------------------------------|
| Keybind        | Function                     | Description                                               |
|----------------+------------------------------+-----------------------------------------------------------|
| Ctl-x 0        | delete_group                 |                                                           |
| Ctl-x 1        | delete_other_groups          |                                                           |
| Ctl-x 2        | split_editor_below           |                                                           |
| Ctl-x 3        | split_editor_right           |                                                           |
| Ctl-x o        | other_group                  |                                                           |
| C-<数字キー>   | switch_focus(<数字キーの値>) | use_ctrl_digit_key_for_digit_argument 変数が False の場合 |
| C-A-<数字キー> | switch_focus(<数字キーの値>) |                                                           |
|----------------+------------------------------+-----------------------------------------------------------|

※ C-<数字キー> に割り当てられている Focus n-th Editor Group の機能は、
use_ctrl_digit_key_for_digit_argument 変数が有効の時には機能しません（数引数の指定用として使われる）。
このため、同じ機能を実現する C-A-<数字キー> を定義しています。

****  「マルチカーソル」のキー設定

|---------+-------------------------------+-------------|
| Keybind | Function                      | Description |
|---------+-------------------------------+-------------|
| C-A-p   | mark_up                       |             |
| C-A-n   | mark_down                     |             |
| C-A-b   | mark + backward_char          |             |
| C-A-f   | mark + forward_char           |             |
| C-A-a   | mark + move_beginning_of_line |             |
| C-A-e   | mark + move_end_of_line       |             |
| C-A-d   | mark_next_like_this           |             |
| C-A-s   | skip_to_next_like_this        |             |
|---------+-------------------------------+-------------|

****  「ターミナル操作」のキー設定

|-----------------+------------------------------+----------------------------------------------------------------|
| Keybind         | Function                     | Description                                                    |
|-----------------+------------------------------+----------------------------------------------------------------|
| C-S-` (C-~)     | create_terminal              | US Keyboard の場合                                             |
| C-S-@ (C-`)     | create_terminal              | JIS Keyboard の場合                                            |
| C-S-<半角/全角> | create_terminal              | JIS Keyboard の場合                                            |
| C-`             | toggle_terminal              | US Keyboard の場合                                             |
| C-@             | toggle_terminal              | JIS Keyboard の場合 / use_ctrl_atmark_for_mark が False の場合 |
| C-<半角/全角>   | toggle_terminal              | JIS Keyboard の場合                                            |
|-----------------+------------------------------+----------------------------------------------------------------|

****  「その他」のキー設定

|---------+--------------------------+-------------|
| Keybind | Function                 | Description |
|---------+--------------------------+-------------|
| M-x     | execute_extended_command |             |
| M-;     | comment_dwim             |             |
|---------+--------------------------+-------------|

*** 関数（Functions）

**** ■ vscodeExecuteCommand

VSCode のコマンドを実行する関数を返す

***** Function

#+BEGIN_EXAMPLE
def vscodeExecuteCommand(command):
#+END_EXAMPLE

***** Parameters

|-----------+----------------------------------------------------------------------------|
| Parameter | Description                                                                |
|-----------+----------------------------------------------------------------------------|
| command   | VSCode の Command Palette で実行するコマンドの文字列（短縮形の場合も有り） |
|-----------+----------------------------------------------------------------------------|

***** Returns

- 引数で指定したコマンドを実行する関数

*** 留意事項

※ ブラウザで github1s.com を指定した際に開く VSCode の画面では、M-k や Ctl-x k で
発行している C-F4 がブラウザ側でキャッチされ、ブラウザのタブを閉じようとしてしまいます。
このため、vscode_target 変数に指定したブラウザで github1s.com を開いて Ctl-x k を実行した
場合には、コマンドパレットで Close Editor を実行するようにし、VSCode の機能が働くように
しています。
M-k は 従来どおり C-F4 を発行するのみの機能としていますので、github1s.com を利用する場合
には、M-k と Ctl-x k を使い分けるようにしてください。
（この対応により、ブラウザで github1s.com を開いていない場合に Ctl-x k を発行すると、
おかしな動き（F1 の実行により、ヘルプの画面が表示される）となります。ご留意ください。）

※ ブラウザで github1s.com を指定した際に開く VSCode の画面では、Ctl-x b で発行している
C-Tab がブラウザ側でキャッチされ、ブラウザのタブを切り替えてしまいます。
このため、vscode_target 変数に指定したブラウザで github1s.com を開いて Ctl-x b を実行した
場合には、コマンドパレットで Quick Open Privious Recently Used Editor in Group を実行する
ようにし、VSCode の機能が働くようにしています。
C-Tab は 従来どおりブラウザで機能しますので、github1s.com を利用する場合には、C-Tab と
Ctl-x b を使い分けるようにしてください。
（この対応により、ブラウザで github1s.com を開いていない場合に Ctl-x b を発行すると、
おかしな動き（F1 の実行により、ヘルプの画面が表示される）となります。ご留意ください。）
