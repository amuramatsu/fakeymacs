#+STARTUP: showall indent

* Fakeymacs extensions manual

** 拡張機能（Extensions）

Fakeymacs には以下の４つの機能拡張を同梱しています。

拡張機能は、個人設定ファイル（config_personal.py）で拡張機能ファイルの読み込みを有効にすることにより、
利用可能となります。

同様の拡張機能ファイルを作成し、個人設定ファイル（config_personal.py）で読み込むことにより、容易に
機能を拡張できます。

*** ■ Emacs の shell-command-on-region の機能をサポートする

Emacs の shell-command-on-region の機能をサポートするための拡張機能です。

**** 拡張機能ファイルの名称

- shell_command_on_region/config.py

**** コンフィグレーションパラメータ

|-------------------------+---------------------------------------------------------------|
| Configuration parameter | Description                                                   |
|-------------------------+---------------------------------------------------------------|
| Linux_tool              | Linux コマンドを起動するために利用する Linux ツールを指定する |
| MSYS2_path              | MSYS2 をインストールしているパスを指定する                    |
| Cygwin_path             | Cygwin をインストールしているパスを指定する                   |
|-------------------------+---------------------------------------------------------------|

**** キーバインド

|---------+-------------------------+-------------|
| Keybind | Function                | Description |
|---------+-------------------------+-------------|
| M-\vert | shell_command_on_region |             |
|---------+-------------------------+-------------|

**** 環境設定

WSL/WSL2、MSYS2、Cygwin、BusyBox で動作します。

予め、いずれかのツールをインストールしてください。

BusyBox を利用する場合は、以下のサイトを参考に busybox64.exe を shell_command_on_region の Extention
フォルダの配下に格納してください。

- https://qiita.com/tetsuy/items/22cba0bc2048967b270a

MSYS2、Cygwin を利用する場合は、ツールをインストールしたパスを MSYS2_path もしくは Cygwin_path 変数に
指定してください。

最後に、Linux_tool 変数に、利用する Linux ツールの名称を指定してください。

**** 動作仕様

- M-| の押下により shell command を入力するダイヤログが開く（ここにコマンドを入力する）
- リージョンが選択されている場合には、そのリージョンがコマンドの標準入力に投入される
- リージョンが選択されていない場合には、空文字列がコマンドの標準入力に投入される
- コマンドの実行結果はクリップボードに格納される他、最初の10行が Keyhac コンソールに出力される
- さらに C-u M-| のように C-u を前置すると、コマンドの実行結果でリージョンが置き換えられる
- ダイヤログで入力したコマンドはクリップボードリストに登録されるので、再利用可能である

**** 使用例

|-------------------------------+------------------------------------------------------------------------------|
| Shell command                 | Description                                                                  |
|-------------------------------+------------------------------------------------------------------------------|
| M-\vert uname -a              | 利用している Linux ツールのシステム情報をクリップボードに格納する            |
| M-\vert wc -l                 | リージョンの行数を数え、結果をクリップボードに格納する                       |
| M-\vert grep 'foo'            | リージョンの foo を含む行を抽出し、結果をクリップボードに格納する            |
| C-u M-\vert sort              | リージョンをソートした内容で置き換える                                       |
| C-u M-\vert sed 's/foo/bar/g' | リージョンにある foo を bar に全て置き換える                                 |
| C-u M-\vert nl -ba            | リージョンに行番号を付ける                                                   |
| C-u M-\vert bash              | リージョンの内容をコマンドとしてシェルで実行し、リージョンを結果で置き換える |
|-------------------------------+------------------------------------------------------------------------------|

※ リージョンに対する処理（C-u を前置する場合）についても、実行結果はクリップボードに格納されます。
また、全ての処理において、実行結果の最初の10行が Keyhac コンソールに表示されます。

※ 最後の使用例では、複数行のシェルスクリプトを書いて、シェルで実行させることもできます。

**** 留意事項

- Linux ツールが動作する日本語環境について

Linux ツールの日本語環境は、BusyBox が cp932、それ以外のツールが utf-8 で動作します。
ただし、BusyBox は日本語対応されている訳ではないようですので、コマンドとして入力した日本語
文字の中に￥の文字が含まれている場合、正しく動作しません。
このため、コマンドに日本語を利用したい場合には、BusyBox 以外のツールを利用することをお勧めします。

- エラーメッセージの表示について

発生するタイミングは分からないのですが、Keyhac コンソールに以下のメッセージが表示されることがあります。
このメッセージの表示後、Keyhac の挙動が不安定になった場合には、「設定のリロード」を行ってください。
対策については、引き続き検討していきます。

#+BEGIN_EXAMPLE
-----------------------------------------
キーフック強制解除を検出しました.
自動的にフックの再設定を行います.

キーフックの強制解除が頻発する場合、時間のかかる処理(300ミリ秒以上)が
メインスレッドで呼び出されていないかを、確認してください.
時間のかかる処理は JobQueue/JobItem を使ってサブスレッドに追い出してください.
-----------------------------------------
#+END_EXAMPLE

*** ■ C-Enter に F2（編集モード移行）を割り当てる

edit_mode_target に指定したアプリケーションソフトで C-Enter に F2（編集モード移行）を割り当てるための
拡張機能です。

**** 拡張機能ファイルの名称

- edit_mode/config.py

**** コンフィグレーションパラメータ

|-------------------------+-----------------------------------------------------------------------------|
| Configuration parameter | Description                                                                 |
|-------------------------+-----------------------------------------------------------------------------|
| edit_mode_target        | C-Enter に F2（編集モード移行）を割り当てるアプリケーションソフトを指定する |
|-------------------------+-----------------------------------------------------------------------------|

**** キーバインド

|---------+---------------------------+-------------|
| Keybind | Function                  | Description |
|---------+---------------------------+-------------|
| C-Enter | self_insert_command("F2") |             |
|---------+---------------------------+-------------|

*** ■ Emacs の場合、IME 切り替え用のキーを C-\ に置き換える

Emacs にフォーカスがあるときに IME 切り替え用のキーを C-\ に置き換えるための拡張機能です。

**** 拡張機能ファイルの名称

- real_emacs/config.py

**** キーバインド

|--------------+---------------------------------+-------------|
| Keybind      | Function                        | Description |
|--------------+---------------------------------+-------------|
| A-`          | keymap.InputKeyCommand("C-Yen") |             |
| <半角／全角> | keymap.InputKeyCommand("C-Yen") |             |
| <無変換>     | keymap.InputKeyCommand("C-F1")  |             |
| <変換>       | keymap.InputKeyCommand("C-F2")  |             |
|--------------+---------------------------------+-------------|

※ Emacs 側での C-F1 と C-F2 の設定については、次のページを参照してください。
- https://w.atwiki.jp/ntemacs/pages/48.html

*** ■ 英語キーボード設定をした OS 上で、日本語キーボードを利用する場合の切り替えを行う

英語キーボード設定をした OS 上で、日本語キーボードを利用する場合の切り替えを行うための拡張機能です。

**** 拡張機能ファイルの名称

- change_keyboard/config.py

**** キーバインド

|-------------+-----------------+-------------|
| Keybind     | Function        | Description |
|-------------+-----------------+-------------|
| C-A-S-Space | change_keyboard |             |
|-------------+-----------------+-------------|
